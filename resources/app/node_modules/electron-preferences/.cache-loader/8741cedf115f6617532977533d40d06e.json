{"remainingRequest":"/Users/tim/repos/electron-preferences/node_modules/babel-loader/lib/index.js??ref--0-1!/Users/tim/repos/electron-preferences/src/app/components/main/components/group/components/fields/accelerator/index.js","dependencies":[{"path":"/Users/tim/repos/electron-preferences/src/app/components/main/components/group/components/fields/accelerator/index.js","mtime":1525109706131},{"path":"/Users/tim/repos/electron-preferences/node_modules/cache-loader/dist/cjs.js","mtime":1510929699000},{"path":"/Users/tim/repos/electron-preferences/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire('./style.scss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar AcceleratorField = function (_React$Component) {\n    _inherits(AcceleratorField, _React$Component);\n\n    function AcceleratorField(props) {\n        _classCallCheck(this, AcceleratorField);\n\n        var _this = _possibleConstructorReturn(this, (AcceleratorField.__proto__ || Object.getPrototypeOf(AcceleratorField)).call(this, props));\n\n        _this.state = {};\n\n\n        _this.pressedKeys = [];\n        _this.keyCount = 0;\n        _this.handleKeyDown = _this.handleKeyDown.bind(_this);\n        _this.handleKeyUp = _this.handleKeyUp.bind(_this);\n        _this.mapAccelerator = _this.mapAccelerator.bind(_this);\n        _this.onChange = _this.onChange.bind(_this);\n\n        return _this;\n    }\n\n    _createClass(AcceleratorField, [{\n        key: 'render',\n        value: function render() {\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'field field-accelerator' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'field-label' },\n                    this.label\n                ),\n                _react2.default.createElement('input', { type: 'text', value: this.value, onKeyDown: this.handleKeyDown, onKeyUp: this.handleKeyUp, readOnly: true }),\n                this.help && _react2.default.createElement(\n                    'span',\n                    { className: 'help' },\n                    this.help\n                )\n            );\n        }\n    }, {\n        key: 'handleKeyDown',\n        value: function handleKeyDown(event) {\n\n            event.preventDefault();\n\n            if (this.keyCount <= 0) {\n                this.pressedKeys = [];\n            }\n\n            if (this.pressedKeys.indexOf(event.key) === -1) {\n                this.pressedKeys.push(event.key);\n                this.keyCount++;\n            }\n\n            this.mapAccelerator(this.pressedKeys);\n        }\n    }, {\n        key: 'handleKeyUp',\n        value: function handleKeyUp(event) {\n\n            event.preventDefault();\n            this.keyCount--;\n            this.mapAccelerator(this.pressedKeys);\n        }\n    }, {\n        key: 'mapAccelerator',\n        value: function mapAccelerator(keys) {\n\n            var arr = keys.map(function (item) {\n                if (item === ' ') return \"Space\";\n                if (item === '+') return \"Plus\";\n                if (/^[a-z]$/.test(item)) return item.toUpperCase();\n                return item;\n            });\n\n            this.onChange(arr.join(\"+\"));\n        }\n    }, {\n        key: 'onChange',\n        value: function onChange(value) {\n\n            return this.props.onChange(value);\n        }\n    }, {\n        key: 'field',\n        get: function get() {\n\n            return this.props.field;\n        }\n    }, {\n        key: 'value',\n        get: function get() {\n\n            return this.props.value || '';\n        }\n    }, {\n        key: 'label',\n        get: function get() {\n\n            return this.field.label;\n        }\n    }, {\n        key: 'help',\n        get: function get() {\n\n            return this.field.help;\n        }\n    }]);\n\n    return AcceleratorField;\n}(_react2.default.Component);\n\nexports.default = AcceleratorField;",null]}