{"remainingRequest":"/Users/tim/repos/electron-preferences/node_modules/style-loader/index.js!/Users/tim/repos/electron-preferences/node_modules/css-loader/index.js!/Users/tim/repos/electron-preferences/node_modules/sass-loader/lib/loader.js??ref--8-3!/Users/tim/repos/electron-preferences/src/app/components/main/components/group/components/fields/accelerator/style.scss","dependencies":[{"path":"/Users/tim/repos/electron-preferences/node_modules/cache-loader/dist/cjs.js","mtime":1525279418314},{"path":"/Users/tim/repos/electron-preferences/node_modules/style-loader/index.js","mtime":1512435383000},{"path":"/Users/tim/repos/electron-preferences/node_modules/css-loader/index.js","mtime":1525279418061},{"path":"/Users/tim/repos/electron-preferences/node_modules/sass-loader/lib/loader.js","mtime":1525279417877}],"contextDependencies":[],"result":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../../node_modules/sass-loader/lib/loader.js??ref--8-3!./style.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../../node_modules/sass-loader/lib/loader.js??ref--8-3!./style.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../../../../../node_modules/css-loader/index.js!../../../../../../../../../node_modules/sass-loader/lib/loader.js??ref--8-3!./style.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}"]}