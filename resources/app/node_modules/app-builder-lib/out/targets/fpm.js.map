{"version":3,"sources":["../../src/targets/fpm.ts"],"names":[],"mappings":"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","sourcesContent":["import { path7za } from \"7zip-bin\"\nimport { appBuilderPath } from \"app-builder-bin\"\nimport { Arch, debug, exec, log, TmpDir, toLinuxArchString, use } from \"builder-util\"\nimport { smarten } from \"../appInfo\"\nimport { objectToArgs } from \"../util/appBuilder\"\nimport { computeEnv } from \"../util/bundledTool\"\nimport { unlinkIfExists } from \"builder-util/out/fs\"\nimport { ensureDir, outputFile, readFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { DebOptions, LinuxTargetSpecificOptions } from \"..\"\nimport { Target } from \"../core\"\nimport * as errorMessages from \"../errorMessages\"\nimport { LinuxPackager } from \"../linuxPackager\"\nimport { isMacOsSierra } from \"../util/macosVersion\"\nimport { getTemplatePath } from \"../util/pathManager\"\nimport { installPrefix, LinuxTargetHelper } from \"./LinuxTargetHelper\"\nimport { fpmPath, getLinuxToolsPath } from \"./tools\"\n\ninterface FpmOptions {\n  maintainer: string | undefined\n  vendor: string\n  url: string\n}\n\nexport default class FpmTarget extends Target {\n  readonly options: LinuxTargetSpecificOptions = {...this.packager.platformSpecificBuildOptions, ...(this.packager.config as any)[this.name]}\n\n  private readonly scriptFiles: Promise<Array<string>>\n\n  constructor(name: string, private readonly packager: LinuxPackager, private readonly helper: LinuxTargetHelper, readonly outDir: string) {\n    super(name, false)\n\n    this.scriptFiles = this.createScripts()\n  }\n\n  private async createScripts(): Promise<Array<string>> {\n    const defaultTemplatesDir = getTemplatePath(\"linux\")\n\n    const packager = this.packager\n    const templateOptions = {\n      // old API compatibility\n      executable: packager.executableName,\n      productFilename: packager.appInfo.productFilename, ...packager.platformSpecificBuildOptions}\n\n    function getResource(value: string | null | undefined, defaultFile: string) {\n      if (value == null) {\n        return path.join(defaultTemplatesDir, defaultFile)\n      }\n      return path.resolve(packager.projectDir, value)\n    }\n\n    return await Promise.all<string>([\n      writeConfigFile(packager.info.tempDirManager, getResource(this.options.afterInstall, \"after-install.tpl\"), templateOptions),\n      writeConfigFile(packager.info.tempDirManager, getResource(this.options.afterRemove, \"after-remove.tpl\"), templateOptions)\n    ])\n  }\n\n  checkOptions(): Promise<any> {\n    return this.computeFpmMetaInfoOptions()\n  }\n\n  private async computeFpmMetaInfoOptions(): Promise<FpmOptions> {\n    const packager = this.packager\n    const projectUrl = await packager.appInfo.computePackageUrl()\n    const errors: Array<string> = []\n    if (projectUrl == null) {\n      errors.push(\"Please specify project homepage, see https://electron.build/configuration/configuration#Metadata-homepage\")\n    }\n\n    const options = this.options\n    let author = options.maintainer\n    if (author == null) {\n      const a = packager.info.metadata.author\n      if (a == null || a.email == null) {\n        errors.push(errorMessages.authorEmailIsMissed)\n      }\n      else {\n        author = `${a.name} <${a.email}>`\n      }\n    }\n\n    if (errors.length > 0) {\n      throw new Error(errors.join(\"\\n\\n\"))\n    }\n\n    return {\n      maintainer: author!!,\n      url: projectUrl!!,\n      vendor: options.vendor || author!!,\n    }\n  }\n\n  async build(appOutDir: string, arch: Arch): Promise<any> {\n    const fpmMetaInfoOptions = await this.computeFpmMetaInfoOptions()\n\n    const target = this.name\n\n    // tslint:disable:no-invalid-template-strings\n    let nameFormat = \"${name}-${version}-${arch}.${ext}\"\n    let isUseArchIfX64 = false\n    if (target === \"deb\") {\n      nameFormat = \"${name}_${version}_${arch}.${ext}\"\n      isUseArchIfX64 = true\n    }\n    else if (target === \"rpm\") {\n      nameFormat = \"${name}-${version}.${arch}.${ext}\"\n      isUseArchIfX64 = true\n    }\n\n    const packager = this.packager\n    const artifactPath = path.join(this.outDir, packager.expandArtifactNamePattern(this.options, target, arch, nameFormat, !isUseArchIfX64))\n\n    await packager.info.callArtifactBuildStarted({\n      targetPresentableName: target,\n      file: artifactPath,\n      arch,\n    })\n\n    await unlinkIfExists(artifactPath)\n    if (packager.packagerOptions.prepackaged != null) {\n      await ensureDir(this.outDir)\n    }\n\n    const scripts = await this.scriptFiles\n    const appInfo = packager.appInfo\n    const options = this.options\n    const synopsis = options.synopsis\n    const args = [\n      \"-s\", \"dir\",\n      \"-t\", target,\n      \"--architecture\", (target === \"pacman\" && arch === Arch.ia32) ? \"i686\" : toLinuxArchString(arch),\n      \"--name\", appInfo.linuxPackageName,\n      \"--force\",\n      \"--after-install\", scripts[0],\n      \"--after-remove\", scripts[1],\n      \"--description\", smarten(target === \"rpm\" ? this.helper.getDescription(options)! : `${synopsis || \"\"}\\n ${this.helper.getDescription(options)}`),\n      \"--version\", appInfo.version,\n      \"--package\", artifactPath,\n    ]\n\n    objectToArgs(args, fpmMetaInfoOptions as any)\n\n    if (debug.enabled) {\n      args.push(\n        \"--log\", \"debug\",\n        \"--debug\")\n    }\n\n    const packageCategory = options.packageCategory\n    if (packageCategory != null) {\n      args.push(\"--category\", packageCategory)\n    }\n\n    const compression = options.compression\n    if (target === \"deb\") {\n      args.push(\"--deb-compression\", compression || \"xz\")\n      use((options as DebOptions).priority, it => args.push(\"--deb-priority\", it!))\n    }\n    else if (target === \"rpm\") {\n      args.push(\"--rpm-compression\", (compression === \"xz\" ? \"xzmt\" : compression) || \"xzmt\")\n      args.push(\"--rpm-os\", \"linux\")\n\n      if (synopsis != null) {\n        args.push(\"--rpm-summary\", smarten(synopsis))\n      }\n    }\n\n    // noinspection JSDeprecatedSymbols\n    let depends = options.depends || packager.platformSpecificBuildOptions.depends\n    if (depends == null) {\n      if (target === \"deb\") {\n        depends = [\"gconf2\", \"gconf-service\", \"libnotify4\", \"libappindicator1\", \"libxtst6\", \"libnss3\", \"libxss1\"]\n      }\n      else if (target === \"pacman\") {\n        // noinspection SpellCheckingInspection\n        depends = [\"c-ares\", \"ffmpeg\", \"gtk3\", \"http-parser\", \"libevent\", \"libvpx\", \"libxslt\", \"libxss\", \"minizip\", \"nss\", \"re2\", \"snappy\", \"libnotify\", \"libappindicator-gtk2\", \"libappindicator-gtk3\", \"libappindicator-sharp\"]\n      }\n      else if (target === \"rpm\") {\n        // noinspection SpellCheckingInspection\n        depends = [\"libnotify\", \"libappindicator\", \"libXScrnSaver\"]\n      }\n      else {\n        depends = []\n      }\n    }\n    else if (!Array.isArray(depends)) {\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof depends === \"string\") {\n        depends = [depends as string]\n      }\n      else {\n        throw new Error(`depends must be Array or String, but specified as: ${depends}`)\n      }\n    }\n\n    for (const dep of depends) {\n      args.push(\"--depends\", dep)\n    }\n\n    use(packager.info.metadata.license, it => args.push(\"--license\", it!))\n    use(appInfo.buildNumber, it => args.push(\"--iteration\", it!))\n\n    use(options.fpm, it => args.push(...it as any))\n\n    args.push(`${appOutDir}/=${installPrefix}/${appInfo.productFilename}`)\n    for (const icon of (await this.helper.icons)) {\n      const extWithDot = path.extname(icon.file)\n      const sizeName = extWithDot === \".svg\" ? \"scalable\" : `${icon.size}x${icon.size}`\n      args.push(`${icon.file}=/usr/share/icons/hicolor/${sizeName}/apps/${packager.executableName}${extWithDot}`)\n    }\n\n    const desktopFilePath = await this.helper.writeDesktopEntry(this.options)\n    args.push(`${desktopFilePath}=/usr/share/applications/${packager.executableName}.desktop`)\n\n    if (packager.packagerOptions.effectiveOptionComputed != null && await packager.packagerOptions.effectiveOptionComputed([args, desktopFilePath])) {\n      return\n    }\n\n    const env = {\n      ...process.env,\n      FPM_COMPRESS_PROGRAM: appBuilderPath,\n      SZA_PATH: path7za,\n      SZA_COMPRESSION_LEVEL: packager.compression === \"store\" ? \"0\" : \"9\",\n      SZA_ARCHIVE_TYPE: \"xz\",\n    }\n\n    // rpmbuild wants directory rpm with some default config files. Even if we can use dylibbundler, path to such config files are not changed (we need to replace in the binary)\n    // so, for now, brew install rpm is still required.\n    if (target !== \"rpm\" && await isMacOsSierra()) {\n      const linuxToolsPath = await getLinuxToolsPath()\n      Object.assign(env, {\n        PATH: computeEnv(process.env.PATH, [path.join(linuxToolsPath, \"bin\")]),\n        DYLD_LIBRARY_PATH: computeEnv(process.env.DYLD_LIBRARY_PATH, [path.join(linuxToolsPath, \"lib\")]),\n      })\n    }\n    await exec(await fpmPath.value, args, {env})\n\n    await packager.dispatchArtifactCreated(artifactPath, this, arch)\n  }\n}\n\nasync function writeConfigFile(tmpDir: TmpDir, templatePath: string, options: any): Promise<string> {\n  //noinspection JSUnusedLocalSymbols\n  function replacer(match: string, p1: string) {\n    if (p1 in options) {\n      return options[p1]\n    }\n    else {\n      throw new Error(`Macro ${p1} is not defined`)\n    }\n  }\n  const config = (await readFile(templatePath, \"utf8\"))\n    .replace(/\\${([a-zA-Z]+)}/g, replacer)\n    .replace(/<%=([a-zA-Z]+)%>/g, (match, p1) => {\n      log.warn(\"<%= varName %> is deprecated, please use ${varName} instead\")\n      return replacer(match, p1.trim())\n    })\n\n  const outputPath = await tmpDir.getTempFile({suffix: path.basename(templatePath, \".tpl\")})\n  await outputFile(outputPath, config)\n  return outputPath\n}\n"],"sourceRoot":""}
