{"version":3,"sources":["../../src/targets/tools.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;;;AAEM,SAAU,iBAAV,GAA2B;AAC/B;AACA,SAAO,qCAAiB,aAAjB,EAAgC,aAAhC,EAA+C,0FAA/C,CAAP;AACD;;AAEM,MAAM,OAAO,GAAG,KAAI,eAAJ,EAAS,MAAK;AACnC,MAAI,OAAO,CAAC,QAAR,KAAqB,OAArB,IAAgC,OAAO,CAAC,GAAR,CAAY,cAAZ,KAA+B,MAAnE,EAA2E;AACzE,WAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AAED,SAAO,2BAAO,KAAP,EACJ,IADI,CACC,EAAE,IAAI,IAAI,CAAC,IAAL,CAAU,EAAV,EAAc,KAAd,CADP,CAAP;AAED,CAPsB,CAAhB,C,CASP;;;;AACM,SAAU,kBAAV,GAA4B;AAChC;AACA,SAAO,OAAO,CAAC,KAAf;AACD,C","sourcesContent":["import { getBin, getBinFromGithub } from \"../binDownload\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\n\nexport function getLinuxToolsPath() {\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(\"linux-tools\", \"mac-10.12.3\", \"SQ8fqIRVXuQVWnVgaMTDWyf2TLAJjJYw3tRSqQJECmgF6qdM7Kogfa6KD49RbGzzMYIFca9Uw3MdsxzOPRWcYw==\")\n}\n\nexport const fpmPath = new Lazy(() => {\n  if (process.platform === \"win32\" || process.env.USE_SYSTEM_FPM === \"true\") {\n    return Promise.resolve(\"fpm\")\n  }\n\n  return getBin(\"fpm\")\n    .then(it => path.join(it, \"fpm\"))\n})\n\n// noinspection JSUnusedGlobalSymbols\nexport function prefetchBuildTools(): Promise<any> {\n  // yes, we starting to use native Promise\n  return fpmPath.value\n}"],"sourceRoot":""}
